name: init_new_app_repo

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: false
      - name: Trigger and await update-templates
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/update-templates.yml/dispatches \
            -d '{"ref":"${{ github.ref_name }}"}'
          RUN_ID=""
          echo "Waiting for update-templates run to start..."
          until [ -n "$RUN_ID" ]; do
            sleep 5
            RUN_ID=$(gh run list --workflow update-templates.yml --branch "${GITHUB_REF_NAME}" --json databaseId,status -q 'map(select(.status=="queued" or .status=="in_progress"))[0].databaseId')
          done
          gh run watch "$RUN_ID" --interval 30
          gh run view "$RUN_ID" --exit-status
      - name: Trigger and await create-app-folder
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APP_NAME: ${{ github.event.repository.name }}
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/create-app-folder.yml/dispatches \
            -d '{"ref":"${{ github.ref_name }}","inputs":{"app-name":"'$APP_NAME'"}}'
          RUN_ID=""
          echo "Waiting for create-app-folder run to start..."
          until [ -n "$RUN_ID" ]; do
            sleep 5
            RUN_ID=$(gh run list --workflow create-app-folder.yml --branch "${GITHUB_REF_NAME}" --json databaseId,status -q 'map(select(.status=="queued" or .status=="in_progress"))[0].databaseId')
          done
          gh run watch "$RUN_ID" --interval 30
          gh run view "$RUN_ID" --exit-status
      - name: Trigger and await publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/publish.yml/dispatches \
            -d '{"ref":"${{ github.ref_name }}"}'
          RUN_ID=""
          echo "Waiting for publish run to start..."
          until [ -n "$RUN_ID" ]; do
            sleep 5
            RUN_ID=$(gh run list --workflow publish.yml --branch "${GITHUB_REF_NAME}" --json databaseId,status -q 'map(select(.status=="queued" or .status=="in_progress"))[0].databaseId')
          done
          gh run watch "$RUN_ID" --interval 30
          gh run view "$RUN_ID" --exit-status
      - name: Remove workflow
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git rm .github/workflows/init_new_app_repo.yml 2>/dev/null || true
          if ! git diff --cached --quiet; then
            git commit -m "chore: remove init_new_app_repo workflow"
            git pull --rebase origin "${GITHUB_REF_NAME}"
            git push
          fi
