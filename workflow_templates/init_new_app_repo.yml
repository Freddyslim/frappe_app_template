name: init_new_app_repo

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Trigger and await clone-templates
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh workflow run clone-templates.yml --ref "${GITHUB_REF}"
          RUN_ID=$(gh run list --workflow clone-templates.yml --branch "${GITHUB_REF_NAME}" -L 1 --json databaseId -q '.[0].databaseId')
          gh run watch "$RUN_ID"
          gh run view "$RUN_ID" --exit-status
      - name: Trigger and await create-app-folder
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APP_NAME: ${{ github.event.repository.name }}
        run: |
          gh workflow run create-app-folder.yml --ref "${GITHUB_REF}" -f app-name="$APP_NAME"
          RUN_ID=$(gh run list --workflow create-app-folder.yml --branch "${GITHUB_REF_NAME}" -L 1 --json databaseId -q '.[0].databaseId')
          gh run watch "$RUN_ID"
          gh run view "$RUN_ID" --exit-status
      - name: Trigger and await publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh workflow run publish.yml --ref "${GITHUB_REF}"
          RUN_ID=$(gh run list --workflow publish.yml --branch "${GITHUB_REF_NAME}" -L 1 --json databaseId -q '.[0].databaseId')
          gh run watch "$RUN_ID"
          gh run view "$RUN_ID" --exit-status
      - name: Remove workflow
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git rm .github/workflows/init_new_app_repo.yml
          git commit -m "chore: remove init_new_app_repo workflow"
          git push
